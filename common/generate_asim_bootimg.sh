#!/bin/bash
#
# Usage: generate_asim_bootimg.sh [target_device]
#        generate_asim_bootimg.sh --help
#
# Description: Generate a boot.img suitable for booting on ASIM
#              with root file system stored on EMMC images.
#
# TODO: How to:
#         1) keep mem= in cmdline in sync w/ actual runs
#         2) keep mmc partition # in sync w/ flash.cfg
#-------------------------------------------------------------------------------

if [ "$1" == "--help" ]; then
    this_script=`basename $0`
    echo " "
    echo "Generate an Android boot image capable of booting on ASIM"
    echo "with root filesystem on EMMC images."
    echo " "
    echo "Usage:"
    echo " "
    echo "  $this_script [target_device]"
    echo "  $this_script --help"
    echo " "
    echo "where:"
    echo " "
    echo "  target_device: grenada"
    echo "  --help:       produces this description"
    echo " "
    exit 0
fi

# Sanity checks & default option processing
if [ "$TOP" == "" ]; then
    echo "ERROR: You must set environment variable TOP to the top of your nvrepo tree"
    exit 2
fi

if [ "$OUT" == "" ]; then
    echo "ERROR: You must set environment variable OUT"
    exit 3
fi

if [ "$1" == "" ]; then
    echo "ERROR: You must set TARGET_DEVICE as argument"
    exit 4
else
    target_device=$1
fi

device_dir=$top/device/nvidia/platform/$target_device
asim_init_rc=$device_dir/init.asim.rc
asim_init_board_rc=$device_dir/init.$target_device.asim.rc
ramdisk_tmpdir=$OUT/asim_ramdisk_tmpdir

kernel_arch=arm64

# Exit when no init.asim.rc file to copy
if [ ! -f "$asim_init_rc" ]; then
    exit 0
fi

# Host tools directory
android_host_bin=$top/out/host/linux-x86/bin

if [ -d "$OUT" ]; then
    echo "Using $ramdisk_tmpdir to build new ramdisk contents"
    rm -rf $ramdisk_tmpdir
    mkdir -p $ramdisk_tmpdir
else
    echo "ERROR: Product output directory $OUT does not exist"
    exit 2
fi

# Extract the contents of standard ramdisk image generated by JackBuild
if [ -f "$OUT/ramdisk.img" ]; then
    echo "Unpacking archive $OUT/ramdisk.img"
    cd $ramdisk_tmpdir
    gzip -dc < $OUT/ramdisk.img | cpio --extract
else
    echo "ERROR: No ramdisk.img found in $OUT"
    exit 2
fi

echo "Replacing init.rc files with asim versions"
echo cp $asim_init_rc $ramdisk_tmpdir/init.rc
cp $asim_init_rc $ramdisk_tmpdir/init.rc
echo cp $asim_init_board_rc $ramdisk_tmpdir/init.$target_device.rc
cp $asim_init_board_rc $ramdisk_tmpdir/init.$target_device.rc
echo "Removing standard components that are useless on sim"

# Assume mmcblk0p1 is the root partition
linux_cmdline='mem=1024M@2048M tegraboot=sdmmc root=/dev/mmcblk0p1 gpt rootwait init=/init'

# Package up the new ramdisk image
if [ -d $android_host_bin ]; then
    echo "Packaging new ramdisk into $OUT/asim_ramdisk.img"
    cd $ramdisk_tmpdir
    find . | cpio -o -H newc --quiet | gzip >$OUT/asim_ramdisk.img
    echo "Creating $OUT/emmc_boot.img"
	$android_host_bin/mkbootimg \
	    --kernel  $OUT/obj/KERNEL/arch/arm64/boot/Image \
	    --ramdisk $OUT/asim_ramdisk.img \
	    --cmdline "$linux_cmdline" \
	    --output $OUT/emmc_boot.img
else
    echo "ERROR: Host tools directory $android_host_bin does not exist"
    exit 2
fi

echo "Done"
exit 0
